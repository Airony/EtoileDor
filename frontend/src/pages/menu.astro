---
import { Icon } from "astro-icon/components";
import MenuItem from "../components/MenuItem.astro";
import BaseLayout from "../layouts/BaseLayout.astro";
import dotenv from "dotenv";
dotenv.config();

function getIdFromName(name: string) {
    return name.replace(/\W/g, "_");
}
import type { Menu } from "@backend/payload-types";
import Header from "../components/Header.astro";

const response = await fetch(`${process.env.API_URL}/globals/menu`);
if (response.status != 200) {
    throw new Error("Failed to fetch menu.");
}
const responseData: Menu = await response.json();
let menu = responseData.categories;
---

<BaseLayout title="Menu">
    <Header />
    <Icon name="flower" class="hidden" />
    {/* Preload icon */}
    <main class="bg-primary-950 py-24 sm:py-28 xl:py-32">
        <div class="px-4 sm:px-8">
            <h1
                class="mb-[2em] text-center font-main text-xl text-secondary-200 xs:text-2xl sm:text-4xl lg:text-5xl"
            >
                Our Menu
            </h1>
            <div
                class="mb-8 flex justify-center gap-4 xs:gap-6 sm:gap-8"
                role="tablist"
                aria-label="Menu Categories Selector"
            >
                {
                    menu.map((category, i) => (
                        <button
                            aria-controls={getIdFromName(
                                category.category_name,
                            )}
                            class="menu-control bg-transparent font-main text-sm text-primary-400 outline-none transition-colors duration-200 aria-selected:text-secondary-200 hover:text-secondary-200 focus:outline-2 focus:outline-secondary-200 xs:text-base sm:text-lg"
                            role="tab"
                            aria-label={`Select ${category.category_name} menu items`}
                            aria-selected={i === 0 ? "true" : "false"}
                        >
                            {category.category_name}
                        </button>
                    ))
                }
            </div>
            <div
                class="menu-container mx-auto grid w-full max-w-[750px] grid-cols-1 grid-rows-1 gap-12 bg-secondary-200 px-4 py-10 sm:gap-8 sm:px-8 lg:w-4/5"
            >
                {
                    menu.map((category, i) => (
                        <div
                            role="tabpanel"
                            class:list={[
                                "menu-category-content col-start-1 col-end-2 row-start-1 row-end-1 flex flex-col gap-8 sm:gap-10 md:gap-12",
                                { active: i === 0 },
                            ]}
                            hidden={i !== 0}
                            id={getIdFromName(category.category_name)}
                        >
                            <div>
                                <div class="mx-auto mb-8 flex w-min flex-row items-center gap-4 border-b-2 border-secondary-900 py-2">
                                    <Icon
                                        name="flower"
                                        class="h-auto w-6 -scale-x-100 stroke-secondary-900"
                                    />
                                    <h2 class="w-max font-main text-base font-semibold text-secondary-900 xs:text-xl">
                                        {category.category_name}
                                    </h2>
                                    <Icon
                                        name="flower"
                                        class="h-auto w-6 stroke-secondary-900 stroke-1"
                                    />
                                </div>
                                <div class="flex flex-col gap-4">
                                    {category.main_items?.map((item) => {
                                        return (
                                            <MenuItem
                                                name={item.item}
                                                price={item.price}
                                            />
                                        );
                                    })}
                                </div>
                            </div>

                            {category.sub_categories?.map((subCategory) => {
                                return (
                                    <div class="">
                                        <h3 class="mx-auto mb-4 w-max border-b-2 border-secondary-900 pb-2 font-main text-sm text-secondary-900 xs:text-lg">
                                            {subCategory.sub_category_name}
                                        </h3>
                                        <div class="flex flex-col gap-4">
                                            {subCategory.sub_category_items.map(
                                                (item) => {
                                                    return (
                                                        <MenuItem
                                                            name={item.item}
                                                            price={item.price}
                                                        />
                                                    );
                                                },
                                            )}
                                        </div>
                                    </div>
                                );
                            })}
                        </div>
                    ))
                }
            </div>
        </div>

        <style>
            .menu-category-content {
                visibility: hidden;
            }

            .menu-category-content[disappearing] {
                animation: fade-out 0.3s ease forwards;
            }

            .menu-category-content.active {
                animation: fade-in 0.3s ease forwards;
            }

            @keyframes fade-in {
                from {
                    opacity: 0;
                    visibility: visible;
                }
                to {
                    opacity: 1;
                    visibility: visible;
                }
            }

            @keyframes fade-out {
                from {
                    opacity: 1;
                    visibility: visible;
                }
                to {
                    opacity: 0;
                    visibility: hidden;
                }
            }
        </style>

        <script>
            const buttons = document.querySelectorAll(".menu-control");
            const menuContainer = document.querySelector(
                ".menu-container",
            ) as HTMLElement;

            buttons.forEach((button) => {
                button.addEventListener("click", () => {
                    const activeCategory = menuContainer.querySelector(
                        ".menu-category-content.active",
                    );
                    if (!activeCategory) return;

                    const relatedCategoryId = button.getAttribute(
                        "aria-controls",
                    ) as string;
                    if (activeCategory?.id === relatedCategoryId) return;

                    const relatedCategory = menuContainer.querySelector(
                        `#${relatedCategoryId}`,
                    ) as HTMLElement;

                    activeCategory.classList.remove("active");

                    buttons.forEach((button) => {
                        button.setAttribute("aria-selected", "false");
                    });
                    button.setAttribute("aria-selected", "true");

                    activeCategory.setAttribute("disappearing", "");
                    activeCategory.setAttribute("hidden", "true");
                    activeCategory.addEventListener(
                        "animationend",
                        () => {
                            activeCategory.removeAttribute("disappearing");
                            relatedCategory.classList.add("active");
                            relatedCategory.setAttribute("hidden", "false");
                        },
                        { once: true },
                    );
                });
            });
        </script>
    </main>
</BaseLayout>
