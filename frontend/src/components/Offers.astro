---
import type { detailedOffer } from "@backend/types/Offers";
import { Image } from "astro:assets";

const offersResponse = await fetch(
    `${process.env.API_URL}/globals/offers/full`,
);
if (offersResponse.status != 200) {
    throw new Error("Failed to fetch offers.");
}
const offersData: detailedOffer = await offersResponse.json();

const List = offersData.list;
---

<div
    class="nmd:gap-x-6 nlg:gap-x-10 flex flex-row flex-wrap justify-stretch gap-x-3 gap-y-8"
>
    {
        List.map((item) => (
            <div class="flex shrink-0 grow basis-[175px] flex-col bg-primary-850 font-main">
                <Image
                    widths={[450, 600]}
                    src={
                        typeof item.image == "string"
                            ? item.image
                            : `${process.env.CMS_URL}${item.image.url}`
                    }
                    inferSize={true}
                    alt=""
                    class="aspect-video h-auto max-h-[220px] w-full object-cover brightness-[65%]"
                    format="webp"
                    loading="lazy"
                />
                <div class="nmd:p-3 nlg:p-y-5 nlg:px-4 nmd:text-lg nlg:py flex flex-col gap-1 p-2 text-xs">
                    <p class="nmd:text-sm nlg:text-lg block text-xs text-secondary-200">
                        {item.details.item}
                    </p>
                    <p class="nmd:text-sm text-xs text-secondary-300">
                        {item.details.price}
                    </p>
                </div>
            </div>
        ))
    }
</div>
