---
import type { detailedOffer } from "@backend/types/Offers";
import { Image } from "astro:assets";

const offersResponse = await fetch(
    `${process.env.API_URL}/globals/offers/full`,
);
if (offersResponse.status != 200) {
    throw new Error("Failed to fetch offers.");
}
const offersData: detailedOffer = await offersResponse.json();

const List = offersData.list;
---

<div
    class="grid grid-cols-1 grid-rows-2 gap-x-4 gap-y-8 xs:grid-cols-2 xs:grid-rows-2 sm:grid-cols-3 sm:grid-rows-1 lg:gap-x-8"
>
    {
        List.map((item, i) => (
            <div
                class="flex flex-col bg-primary-850"
                class:list={{
                    "xs:col-span-2 sm:col-span-1": i === 0,
                }}
            >
                <Image
                    widths={[450, 600]}
                    src={
                        typeof item.image == "string"
                            ? item.image
                            : `${process.env.CMS_URL}${item.image.url}`
                    }
                    inferSize={true}
                    alt=""
                    class="h-[30vh] max-h-72 w-full object-cover brightness-[65%] sm:aspect-square sm:h-auto sm:max-h-none"
                    format="webp"
                    loading="lazy"
                />
                <div class="flex grow flex-col p-3 font-main text-sm md:p-4 md:text-lg lg:py-5 xl:py-6 xl:text-xl">
                    <p class="mb-[1em] block text-secondary-200 lg:mb-5 xl:mb-6">
                        {item.details.item}
                    </p>
                    <p class="mt-auto text-secondary-300">
                        {item.details.price}
                    </p>
                </div>
            </div>
        ))
    }
</div>
